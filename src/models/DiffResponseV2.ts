/* tslint:disable */
/* eslint-disable */
/**
 * Nessie API
 * Transactional Catalog for Data Lakes  * Git-inspired data version control * Cross-table transactions and visibility * Works with Apache Iceberg tables
 *
 * The version of the OpenAPI document: 0.69.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DiffEntryV2 } from './DiffEntryV2';
import {
    DiffEntryV2FromJSON,
    DiffEntryV2FromJSONTyped,
    DiffEntryV2ToJSON,
} from './DiffEntryV2';
import type { ReferenceV2 } from './ReferenceV2';
import {
    ReferenceV2FromJSON,
    ReferenceV2FromJSONTyped,
    ReferenceV2ToJSON,
} from './ReferenceV2';

/**
 * 
 * @export
 * @interface DiffResponseV2
 */
export interface DiffResponseV2 {
    /**
     * 
     * @type {boolean}
     * @memberof DiffResponseV2
     */
    hasMore?: boolean;
    /**
     * 
     * @type {string}
     * @memberof DiffResponseV2
     */
    token?: string;
    /**
     * 
     * @type {Array<DiffEntryV2>}
     * @memberof DiffResponseV2
     */
    diffs?: Array<DiffEntryV2>;
    /**
     * 
     * @type {ReferenceV2}
     * @memberof DiffResponseV2
     */
    effectiveFromReference?: ReferenceV2;
    /**
     * 
     * @type {ReferenceV2}
     * @memberof DiffResponseV2
     */
    effectiveToReference?: ReferenceV2;
}

/**
 * Check if a given object implements the DiffResponseV2 interface.
 */
export function instanceOfDiffResponseV2(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function DiffResponseV2FromJSON(json: any): DiffResponseV2 {
    return DiffResponseV2FromJSONTyped(json, false);
}

export function DiffResponseV2FromJSONTyped(json: any, ignoreDiscriminator: boolean): DiffResponseV2 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'hasMore': !exists(json, 'hasMore') ? undefined : json['hasMore'],
        'token': !exists(json, 'token') ? undefined : json['token'],
        'diffs': !exists(json, 'diffs') ? undefined : ((json['diffs'] as Array<any>).map(DiffEntryV2FromJSON)),
        'effectiveFromReference': !exists(json, 'effectiveFromReference') ? undefined : ReferenceV2FromJSON(json['effectiveFromReference']),
        'effectiveToReference': !exists(json, 'effectiveToReference') ? undefined : ReferenceV2FromJSON(json['effectiveToReference']),
    };
}

export function DiffResponseV2ToJSON(value?: DiffResponseV2 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'hasMore': value.hasMore,
        'token': value.token,
        'diffs': value.diffs === undefined ? undefined : ((value.diffs as Array<any>).map(DiffEntryV2ToJSON)),
        'effectiveFromReference': ReferenceV2ToJSON(value.effectiveFromReference),
        'effectiveToReference': ReferenceV2ToJSON(value.effectiveToReference),
    };
}

