/* tslint:disable */
/* eslint-disable */
/**
 * Nessie API
 * Transactional Catalog for Data Lakes  * Git-inspired data version control * Cross-table transactions and visibility * Works with Apache Iceberg tables
 *
 * The version of the OpenAPI document: 0.69.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EntryV1 } from './EntryV1';
import {
    EntryV1FromJSON,
    EntryV1FromJSONTyped,
    EntryV1ToJSON,
} from './EntryV1';

/**
 * 
 * @export
 * @interface EntriesResponseV1
 */
export interface EntriesResponseV1 {
    /**
     * 
     * @type {boolean}
     * @memberof EntriesResponseV1
     */
    hasMore?: boolean;
    /**
     * 
     * @type {string}
     * @memberof EntriesResponseV1
     */
    token?: string;
    /**
     * 
     * @type {Array<EntryV1>}
     * @memberof EntriesResponseV1
     */
    entries: Array<EntryV1>;
}

/**
 * Check if a given object implements the EntriesResponseV1 interface.
 */
export function instanceOfEntriesResponseV1(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "entries" in value;

    return isInstance;
}

export function EntriesResponseV1FromJSON(json: any): EntriesResponseV1 {
    return EntriesResponseV1FromJSONTyped(json, false);
}

export function EntriesResponseV1FromJSONTyped(json: any, ignoreDiscriminator: boolean): EntriesResponseV1 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'hasMore': !exists(json, 'hasMore') ? undefined : json['hasMore'],
        'token': !exists(json, 'token') ? undefined : json['token'],
        'entries': ((json['entries'] as Array<any>).map(EntryV1FromJSON)),
    };
}

export function EntriesResponseV1ToJSON(value?: EntriesResponseV1 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'hasMore': value.hasMore,
        'token': value.token,
        'entries': ((value.entries as Array<any>).map(EntryV1ToJSON)),
    };
}

