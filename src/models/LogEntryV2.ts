/* tslint:disable */
/* eslint-disable */
/**
 * Nessie API
 * Transactional Catalog for Data Lakes  * Git-inspired data version control * Cross-table transactions and visibility * Works with Apache Iceberg tables
 *
 * The version of the OpenAPI document: 0.69.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CommitMetaV2 } from './CommitMetaV2';
import {
    CommitMetaV2FromJSON,
    CommitMetaV2FromJSONTyped,
    CommitMetaV2ToJSON,
} from './CommitMetaV2';
import type { OperationV2 } from './OperationV2';
import {
    OperationV2FromJSON,
    OperationV2FromJSONTyped,
    OperationV2ToJSON,
} from './OperationV2';

/**
 * 
 * @export
 * @interface LogEntryV2
 */
export interface LogEntryV2 {
    /**
     * 
     * @type {CommitMetaV2}
     * @memberof LogEntryV2
     */
    commitMeta: CommitMetaV2;
    /**
     * 
     * @type {string}
     * @memberof LogEntryV2
     */
    parentCommitHash?: string;
    /**
     * 
     * @type {Array<OperationV2>}
     * @memberof LogEntryV2
     */
    operations?: Array<OperationV2>;
}

/**
 * Check if a given object implements the LogEntryV2 interface.
 */
export function instanceOfLogEntryV2(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "commitMeta" in value;

    return isInstance;
}

export function LogEntryV2FromJSON(json: any): LogEntryV2 {
    return LogEntryV2FromJSONTyped(json, false);
}

export function LogEntryV2FromJSONTyped(json: any, ignoreDiscriminator: boolean): LogEntryV2 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'commitMeta': CommitMetaV2FromJSON(json['commitMeta']),
        'parentCommitHash': !exists(json, 'parentCommitHash') ? undefined : json['parentCommitHash'],
        'operations': !exists(json, 'operations') ? undefined : ((json['operations'] as Array<any>).map(OperationV2FromJSON)),
    };
}

export function LogEntryV2ToJSON(value?: LogEntryV2 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'commitMeta': CommitMetaV2ToJSON(value.commitMeta),
        'parentCommitHash': value.parentCommitHash,
        'operations': value.operations === undefined ? undefined : ((value.operations as Array<any>).map(OperationV2ToJSON)),
    };
}

