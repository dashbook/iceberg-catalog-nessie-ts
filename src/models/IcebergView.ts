/* tslint:disable */
/* eslint-disable */
/**
 * Nessie API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.65.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface IcebergView
 */
export interface IcebergView {
    /**
     * 
     * @type {string}
     * @memberof IcebergView
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof IcebergView
     */
    metadataLocation: string;
    /**
     * 
     * @type {number}
     * @memberof IcebergView
     */
    versionId?: number;
    /**
     * 
     * @type {number}
     * @memberof IcebergView
     */
    schemaId?: number;
    /**
     * 
     * @type {string}
     * @memberof IcebergView
     */
    sqlText: string;
    /**
     * 
     * @type {string}
     * @memberof IcebergView
     */
    dialect?: string;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof IcebergView
     * @deprecated
     */
    metadata?: { [key: string]: any; };
}

/**
 * Check if a given object implements the IcebergView interface.
 */
export function instanceOfIcebergView(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "metadataLocation" in value;
    isInstance = isInstance && "sqlText" in value;

    return isInstance;
}

export function IcebergViewFromJSON(json: any): IcebergView {
    return IcebergViewFromJSONTyped(json, false);
}

export function IcebergViewFromJSONTyped(json: any, ignoreDiscriminator: boolean): IcebergView {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'metadataLocation': json['metadataLocation'],
        'versionId': !exists(json, 'versionId') ? undefined : json['versionId'],
        'schemaId': !exists(json, 'schemaId') ? undefined : json['schemaId'],
        'sqlText': json['sqlText'],
        'dialect': !exists(json, 'dialect') ? undefined : json['dialect'],
        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],
    };
}

export function IcebergViewToJSON(value?: IcebergView | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'metadataLocation': value.metadataLocation,
        'versionId': value.versionId,
        'schemaId': value.schemaId,
        'sqlText': value.sqlText,
        'dialect': value.dialect,
        'metadata': value.metadata,
    };
}

