/* tslint:disable */
/* eslint-disable */
/**
 * Nessie API
 * Transactional Catalog for Data Lakes  * Git-inspired data version control * Cross-table transactions and visibility * Works with Apache Iceberg tables
 *
 * The version of the OpenAPI document: 0.69.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ReferenceMetadata } from './ReferenceMetadata';
import {
    ReferenceMetadataFromJSON,
    ReferenceMetadataFromJSONTyped,
    ReferenceMetadataToJSON,
} from './ReferenceMetadata';

/**
 * 
 * @export
 * @interface Detached
 */
export interface Detached {
    /**
     * 
     * @type {string}
     * @memberof Detached
     */
    hash: string;
    /**
     * 
     * @type {ReferenceMetadata}
     * @memberof Detached
     */
    metadata?: ReferenceMetadata;
}

/**
 * Check if a given object implements the Detached interface.
 */
export function instanceOfDetached(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "hash" in value;

    return isInstance;
}

export function DetachedFromJSON(json: any): Detached {
    return DetachedFromJSONTyped(json, false);
}

export function DetachedFromJSONTyped(json: any, ignoreDiscriminator: boolean): Detached {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'hash': json['hash'],
        'metadata': !exists(json, 'metadata') ? undefined : ReferenceMetadataFromJSON(json['metadata']),
    };
}

export function DetachedToJSON(value?: Detached | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'hash': value.hash,
        'metadata': ReferenceMetadataToJSON(value.metadata),
    };
}

