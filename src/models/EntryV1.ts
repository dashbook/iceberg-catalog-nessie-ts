/* tslint:disable */
/* eslint-disable */
/**
 * Nessie API
 * Transactional Catalog for Data Lakes  * Git-inspired data version control * Cross-table transactions and visibility * Works with Apache Iceberg tables
 *
 * The version of the OpenAPI document: 0.69.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ContentKeyV1 } from './ContentKeyV1';
import {
    ContentKeyV1FromJSON,
    ContentKeyV1FromJSONTyped,
    ContentKeyV1ToJSON,
} from './ContentKeyV1';

/**
 * 
 * @export
 * @interface EntryV1
 */
export interface EntryV1 {
    /**
     * Declares the type of a Nessie content object, which is currently one of ICEBERG_TABLE, DELTA_LAKE_TABLE, ICEBERG_VIEW, NAMESPACE or UDF, which are the discriminator mapping values of the 'Content' type.
     * @type {string}
     * @memberof EntryV1
     */
    type?: string;
    /**
     * 
     * @type {ContentKeyV1}
     * @memberof EntryV1
     */
    name: ContentKeyV1;
}

/**
 * Check if a given object implements the EntryV1 interface.
 */
export function instanceOfEntryV1(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;

    return isInstance;
}

export function EntryV1FromJSON(json: any): EntryV1 {
    return EntryV1FromJSONTyped(json, false);
}

export function EntryV1FromJSONTyped(json: any, ignoreDiscriminator: boolean): EntryV1 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': !exists(json, 'type') ? undefined : json['type'],
        'name': ContentKeyV1FromJSON(json['name']),
    };
}

export function EntryV1ToJSON(value?: EntryV1 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'name': ContentKeyV1ToJSON(value.name),
    };
}

