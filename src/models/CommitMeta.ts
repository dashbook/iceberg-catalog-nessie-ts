/* tslint:disable */
/* eslint-disable */
/**
 * Nessie API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.65.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CommitMeta
 */
export interface CommitMeta {
    /**
     * 
     * @type {string}
     * @memberof CommitMeta
     */
    hash?: string;
    /**
     * 
     * @type {string}
     * @memberof CommitMeta
     */
    committer?: string;
    /**
     * 
     * @type {string}
     * @memberof CommitMeta
     */
    author?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof CommitMeta
     */
    authors: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof CommitMeta
     */
    signedOffBy?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof CommitMeta
     */
    allSignedOffBy: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof CommitMeta
     */
    message: string;
    /**
     * 
     * @type {Date}
     * @memberof CommitMeta
     */
    commitTime?: Date;
    /**
     * 
     * @type {Date}
     * @memberof CommitMeta
     */
    authorTime?: Date;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof CommitMeta
     */
    properties: { [key: string]: string; };
    /**
     * 
     * @type {{ [key: string]: Array<string>; }}
     * @memberof CommitMeta
     */
    allProperties: { [key: string]: Array<string>; };
    /**
     * 
     * @type {Array<string>}
     * @memberof CommitMeta
     */
    parentCommitHashes: Array<string>;
}

/**
 * Check if a given object implements the CommitMeta interface.
 */
export function instanceOfCommitMeta(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "authors" in value;
    isInstance = isInstance && "allSignedOffBy" in value;
    isInstance = isInstance && "message" in value;
    isInstance = isInstance && "properties" in value;
    isInstance = isInstance && "allProperties" in value;
    isInstance = isInstance && "parentCommitHashes" in value;

    return isInstance;
}

export function CommitMetaFromJSON(json: any): CommitMeta {
    return CommitMetaFromJSONTyped(json, false);
}

export function CommitMetaFromJSONTyped(json: any, ignoreDiscriminator: boolean): CommitMeta {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'hash': !exists(json, 'hash') ? undefined : json['hash'],
        'committer': !exists(json, 'committer') ? undefined : json['committer'],
        'author': !exists(json, 'author') ? undefined : json['author'],
        'authors': json['authors'],
        'signedOffBy': !exists(json, 'signedOffBy') ? undefined : json['signedOffBy'],
        'allSignedOffBy': json['allSignedOffBy'],
        'message': json['message'],
        'commitTime': !exists(json, 'commitTime') ? undefined : (new Date(json['commitTime'])),
        'authorTime': !exists(json, 'authorTime') ? undefined : (new Date(json['authorTime'])),
        'properties': json['properties'],
        'allProperties': json['allProperties'],
        'parentCommitHashes': json['parentCommitHashes'],
    };
}

export function CommitMetaToJSON(value?: CommitMeta | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'hash': value.hash,
        'committer': value.committer,
        'author': value.author,
        'authors': value.authors,
        'signedOffBy': value.signedOffBy,
        'allSignedOffBy': value.allSignedOffBy,
        'message': value.message,
        'commitTime': value.commitTime === undefined ? undefined : (value.commitTime.toISOString()),
        'authorTime': value.authorTime === undefined ? undefined : (value.authorTime.toISOString()),
        'properties': value.properties,
        'allProperties': value.allProperties,
        'parentCommitHashes': value.parentCommitHashes,
    };
}

