/* tslint:disable */
/* eslint-disable */
/**
 * Nessie API
 * Transactional Catalog for Data Lakes  * Git-inspired data version control * Cross-table transactions and visibility * Works with Apache Iceberg tables
 *
 * The version of the OpenAPI document: 0.69.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ContentWithKeyV1 } from './ContentWithKeyV1';
import {
    ContentWithKeyV1FromJSON,
    ContentWithKeyV1FromJSONTyped,
    ContentWithKeyV1ToJSON,
} from './ContentWithKeyV1';

/**
 * 
 * @export
 * @interface GetMultipleContentsResponseV1
 */
export interface GetMultipleContentsResponseV1 {
    /**
     * 
     * @type {Array<ContentWithKeyV1>}
     * @memberof GetMultipleContentsResponseV1
     */
    contents: Array<ContentWithKeyV1>;
}

/**
 * Check if a given object implements the GetMultipleContentsResponseV1 interface.
 */
export function instanceOfGetMultipleContentsResponseV1(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "contents" in value;

    return isInstance;
}

export function GetMultipleContentsResponseV1FromJSON(json: any): GetMultipleContentsResponseV1 {
    return GetMultipleContentsResponseV1FromJSONTyped(json, false);
}

export function GetMultipleContentsResponseV1FromJSONTyped(json: any, ignoreDiscriminator: boolean): GetMultipleContentsResponseV1 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'contents': ((json['contents'] as Array<any>).map(ContentWithKeyV1FromJSON)),
    };
}

export function GetMultipleContentsResponseV1ToJSON(value?: GetMultipleContentsResponseV1 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'contents': ((value.contents as Array<any>).map(ContentWithKeyV1ToJSON)),
    };
}

