/* tslint:disable */
/* eslint-disable */
/**
 * Nessie API
 * Transactional Catalog for Data Lakes  * Git-inspired data version control * Cross-table transactions and visibility * Works with Apache Iceberg tables
 *
 * The version of the OpenAPI document: 0.69.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CommitMeta } from './CommitMeta';
import {
    CommitMetaFromJSON,
    CommitMetaFromJSONTyped,
    CommitMetaToJSON,
} from './CommitMeta';
import type { Operation } from './Operation';
import {
    OperationFromJSON,
    OperationFromJSONTyped,
    OperationToJSON,
} from './Operation';

/**
 * 
 * @export
 * @interface LogEntry
 */
export interface LogEntry {
    /**
     * 
     * @type {CommitMeta}
     * @memberof LogEntry
     */
    commitMeta: CommitMeta;
    /**
     * 
     * @type {Array<string>}
     * @memberof LogEntry
     * @deprecated
     */
    additionalParents?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof LogEntry
     */
    parentCommitHash?: string;
    /**
     * 
     * @type {Array<Operation>}
     * @memberof LogEntry
     */
    operations?: Array<Operation>;
}

/**
 * Check if a given object implements the LogEntry interface.
 */
export function instanceOfLogEntry(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "commitMeta" in value;

    return isInstance;
}

export function LogEntryFromJSON(json: any): LogEntry {
    return LogEntryFromJSONTyped(json, false);
}

export function LogEntryFromJSONTyped(json: any, ignoreDiscriminator: boolean): LogEntry {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'commitMeta': CommitMetaFromJSON(json['commitMeta']),
        'additionalParents': !exists(json, 'additionalParents') ? undefined : json['additionalParents'],
        'parentCommitHash': !exists(json, 'parentCommitHash') ? undefined : json['parentCommitHash'],
        'operations': !exists(json, 'operations') ? undefined : ((json['operations'] as Array<any>).map(OperationFromJSON)),
    };
}

export function LogEntryToJSON(value?: LogEntry | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'commitMeta': CommitMetaToJSON(value.commitMeta),
        'additionalParents': value.additionalParents,
        'parentCommitHash': value.parentCommitHash,
        'operations': value.operations === undefined ? undefined : ((value.operations as Array<any>).map(OperationToJSON)),
    };
}

