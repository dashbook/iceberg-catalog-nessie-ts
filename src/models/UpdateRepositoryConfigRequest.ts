/* tslint:disable */
/* eslint-disable */
/**
 * Nessie API
 * Transactional Catalog for Data Lakes  * Git-inspired data version control * Cross-table transactions and visibility * Works with Apache Iceberg tables
 *
 * The version of the OpenAPI document: 0.69.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RepositoryConfig } from './RepositoryConfig';
import {
    RepositoryConfigFromJSON,
    RepositoryConfigFromJSONTyped,
    RepositoryConfigToJSON,
} from './RepositoryConfig';

/**
 * 
 * @export
 * @interface UpdateRepositoryConfigRequest
 */
export interface UpdateRepositoryConfigRequest {
    /**
     * 
     * @type {RepositoryConfig}
     * @memberof UpdateRepositoryConfigRequest
     */
    config?: RepositoryConfig;
}

/**
 * Check if a given object implements the UpdateRepositoryConfigRequest interface.
 */
export function instanceOfUpdateRepositoryConfigRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UpdateRepositoryConfigRequestFromJSON(json: any): UpdateRepositoryConfigRequest {
    return UpdateRepositoryConfigRequestFromJSONTyped(json, false);
}

export function UpdateRepositoryConfigRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateRepositoryConfigRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'config': !exists(json, 'config') ? undefined : RepositoryConfigFromJSON(json['config']),
    };
}

export function UpdateRepositoryConfigRequestToJSON(value?: UpdateRepositoryConfigRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'config': RepositoryConfigToJSON(value.config),
    };
}

