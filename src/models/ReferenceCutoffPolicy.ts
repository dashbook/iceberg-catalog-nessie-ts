/* tslint:disable */
/* eslint-disable */
/**
 * Nessie API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.65.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Cutoff policies per reference names. Supplied as a ref-name-pattern=policy tuple. Reference name patterns are regular expressions.
 * @export
 * @interface ReferenceCutoffPolicy
 */
export interface ReferenceCutoffPolicy {
    /**
     * Reference name patterns as a regular expressions.
     * @type {string}
     * @memberof ReferenceCutoffPolicy
     */
    referenceNamePattern?: string;
    /**
     * Policies can be one of: - number of commits as an integer value - a duration (see java.time.Duration) - an ISO instant - 'NONE', means everything's considered as live
     * @type {string}
     * @memberof ReferenceCutoffPolicy
     */
    policy?: string;
}

/**
 * Check if a given object implements the ReferenceCutoffPolicy interface.
 */
export function instanceOfReferenceCutoffPolicy(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ReferenceCutoffPolicyFromJSON(json: any): ReferenceCutoffPolicy {
    return ReferenceCutoffPolicyFromJSONTyped(json, false);
}

export function ReferenceCutoffPolicyFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReferenceCutoffPolicy {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'referenceNamePattern': !exists(json, 'referenceNamePattern') ? undefined : json['referenceNamePattern'],
        'policy': !exists(json, 'policy') ? undefined : json['policy'],
    };
}

export function ReferenceCutoffPolicyToJSON(value?: ReferenceCutoffPolicy | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'referenceNamePattern': value.referenceNamePattern,
        'policy': value.policy,
    };
}

