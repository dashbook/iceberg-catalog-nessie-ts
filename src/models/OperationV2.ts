/* tslint:disable */
/* eslint-disable */
/**
 * Nessie API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.65.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    DeleteV2,
    instanceOfDeleteV2,
    DeleteV2FromJSON,
    DeleteV2FromJSONTyped,
    DeleteV2ToJSON,
} from './DeleteV2';
import {
    PutV2,
    instanceOfPutV2,
    PutV2FromJSON,
    PutV2FromJSONTyped,
    PutV2ToJSON,
} from './PutV2';
import {
    UnchangedV2,
    instanceOfUnchangedV2,
    UnchangedV2FromJSON,
    UnchangedV2FromJSONTyped,
    UnchangedV2ToJSON,
} from './UnchangedV2';

/**
 * @type OperationV2
 * Describes an operation to be performed against one content object.
 * 
 * The Nessie backend will validate the correctness of the operations.
 * @export
 */
export type OperationV2 = { type: 'DELETE' } & DeleteV2 | { type: 'PUT' } & PutV2 | { type: 'UNCHANGED' } & UnchangedV2;

export function OperationV2FromJSON(json: any): OperationV2 {
    return OperationV2FromJSONTyped(json, false);
}

export function OperationV2FromJSONTyped(json: any, ignoreDiscriminator: boolean): OperationV2 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['type']) {
        case 'DELETE':
            return {...DeleteV2FromJSONTyped(json, true), type: 'DELETE'};
        case 'PUT':
            return {...PutV2FromJSONTyped(json, true), type: 'PUT'};
        case 'UNCHANGED':
            return {...UnchangedV2FromJSONTyped(json, true), type: 'UNCHANGED'};
        default:
            throw new Error(`No variant of OperationV2 exists with 'type=${json['type']}'`);
    }
}

export function OperationV2ToJSON(value?: OperationV2 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['type']) {
        case 'DELETE':
            return DeleteV2ToJSON(value);
        case 'PUT':
            return PutV2ToJSON(value);
        case 'UNCHANGED':
            return UnchangedV2ToJSON(value);
        default:
            throw new Error(`No variant of OperationV2 exists with 'type=${value['type']}'`);
    }

}

