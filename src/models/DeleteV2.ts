/* tslint:disable */
/* eslint-disable */
/**
 * Nessie API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.65.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ContentKeyV2 } from './ContentKeyV2';
import {
    ContentKeyV2FromJSON,
    ContentKeyV2FromJSONTyped,
    ContentKeyV2ToJSON,
} from './ContentKeyV2';

/**
 * Used to delete an existing content key.
 * 
 * If the key for a content shall change (aka a rename), then use a `Delete` operation using the current (old) key and a `Put` operation using the new key with the current `Content` in the the `value` field. See `Put` operation.
 * @export
 * @interface DeleteV2
 */
export interface DeleteV2 {
    /**
     * 
     * @type {ContentKeyV2}
     * @memberof DeleteV2
     */
    key: ContentKeyV2;
}

/**
 * Check if a given object implements the DeleteV2 interface.
 */
export function instanceOfDeleteV2(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "key" in value;

    return isInstance;
}

export function DeleteV2FromJSON(json: any): DeleteV2 {
    return DeleteV2FromJSONTyped(json, false);
}

export function DeleteV2FromJSONTyped(json: any, ignoreDiscriminator: boolean): DeleteV2 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'key': ContentKeyV2FromJSON(json['key']),
    };
}

export function DeleteV2ToJSON(value?: DeleteV2 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'key': ContentKeyV2ToJSON(value.key),
    };
}

